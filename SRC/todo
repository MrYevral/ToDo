#!/bin/bash
# 
# Set dir to the directory where everything is kept
# This directory must contain a .todo_number file containing the next number to be issued.
dir=~/ToDo/SRC/todo_dir

today=$(date +%Y-%m-%d)
# Is the first argument a command?  Commands so far are ls
if [ $# == 0 ]
then
    set -- ls
fi
case $1 in
ls | l)
    FILES="$dir/*"
    for f in $FILES
    do
        fn=$(basename $f)

        if [ ${fn: 0: ${#2} } == $2 ]
        then
            tn=${fn: 0: 10}
            if [[ $tn < $today ]]
            then
                gap=' << '
            elif [[ $tn == $today ]]
            then
                gap=' == '
                [ -z $eqHad ] && echo
                eqHad=1
            else
                gap=' >> '
                [ -z $gtHad ] && echo
                gtHad=1
            fi
            title=$(head -1 $f)
            echo $fn $gap $title
        fi
    done
    exit
;;
cat)
    cat $dir/*#$2
    exit $?
;;
catf)
    sed '1!s/^/    /' $dir/*#$2
    exit $?
;;
vi | emacs )
    $1 $dir/*#$2
    exit $?
;;
rm)
    rm $dir/*#$2
    exit $?
;;
esac

# The first argument is the date the item is due.
dd=$(date +%Y-%m-%d_%R --date="$1")
if [ $? == 0 ]
then
    echo $dd
else
    echo "Didn't understand the date"
    exit 1
fi
# Now collect the input
task=$(cat)
# Pick out the next serial number and increment it.
serial=$(cat $dir/.todo_number)
(( serial++ ))
fnx=000$serial
fnx=${fnx: -3: 3}
dd=$dd#$fnx
# and save into file named after the given date in private directory
echo "$task" >"$dir/$dd"
echo $serial >$dir/.todo_number
